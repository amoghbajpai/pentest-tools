#now we will be making a naive brute force port scanner

import sys
import socket
from datetime import datetime

#define our target
if(len(sys.argv== 2):
	target= socket.gethostbyname(sys.argv[1]) #translate host name to IPv4
else
	print("Invalid amount of arguments.")
	print("Syntax: python3 port_scanner.py <ip>")
	
	
#add a banner
print("-"*58)
print("Scanning target " + target)	
print("Time started: " + str(datetime.now()))
print("-"*58)

#this is a naive brute force port scanner, to speed up we may use threads

try:
		for port in range(1,65535): #loop across ALL possible ports to get a connection, the objective is to look at all open port connections
			s= socket.socket(socket.AF_INET, socket.SOCK_STREAM)
			socket.setdefaulttimeout(1)
			result= s.connect_ex((target.port)) #returns an error indicator
            #print("Checking port {}".format(port))
			if(result== 0):
				print("Port {} is open".format(port))
			s.close() #close connection

except KeyboardInterrupt:
		print(\n"Exiting program.")
		sys.exit() #idea is always to make the program more robust

except socket.gaierror:
		print("Hostname could not be resolved")
		sys.exit()

except socket.error:
		print("Could not connect to server.")
		sys.exit()